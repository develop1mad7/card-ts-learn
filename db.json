{
  "dataLearn": [
    {
      "id": "810c",
      "title": "Статическая типизация",
      "desc": "Позволяет задавать типы для данных и проверять их на этапе разработки, до выполнения кода. Что дает возможность отловить ошибки в момент написания кода."
    },
    {
      "id": "7ca8",
      "title": "Явная типизация",
      "desc": "При создании переменной явно указывается тип данных :type"
    },
    {
      "id": "f5d5",
      "title": "Выводимая типизация",
      "desc": "Тип определяется и присваивается по первому заданному значению"
    },
    {
      "id": "0d77",
      "title": "Структурная типизация",
      "desc": "Если несколько типов имеет одинаковую структуру, то в месте ожидания одной структуры, можно подложить другую, без вреда для программы"
    },
    {
      "id": "4066",
      "title": "Специальные типы",
      "desc": "- any <br/> - unknow <br/> - never <br/> - void <br/> - литералы"
    },
    {
      "id": "87b1",
      "title": "Объединение(union) |",
      "desc": ": 'str' | number; \"value1\"| \"value2\" <br />\nМожет быть как различные по типу множества, так и перечисление допустимых значений, в случае объединения различных составных типов, допустимо использовать один из N-го кол-ва, все сразу или более одного."
    },
    {
      "id": "d4a6",
      "title": "Пересечение типов &",
      "desc": "Допускается использовать только все пересечения от type1 & type2"
    },
    {
      "id": "790a",
      "title": "Надтип и подтип",
      "desc": "Надтип - содержит в себе некоторые поля \"Подтипа\", что дает возможность использовать подтип при работе с надтипом(лишнее просто отсеется), а подтип не может использовать надтип в свою очередь для присвоения данных с типом надтип, т.к. в нем нет \"расширенных\" свойств."
    },
    {
      "id": "701f",
      "title": "Примитивные типы данных",
      "desc": ":number<br/>\n:string<br/>\n:boolean<br/>\n:null<br/>\n:undefined<br/>\n:symbol<br/>"
    },
    {
      "id": "49d6",
      "title": "Специальный тип ANY",
      "desc": "тип, который отключает типизацию, что в разработке не допустимо."
    },
    {
      "id": "4737",
      "title": "Специальный тип UNKNOW",
      "desc": "Тип, который позволяет безопасно отключать типизацию, для самостоятельной проверки типа и последующего его присвоения."
    },
    {
      "id": "93c5",
      "title": "Специальный тип NEVER",
      "desc": "Тип значение которого никогда не возвращается, содержит ошибку или указывает на бесконечный цикл, так же можно использовать для проверки switch позволяет определить, что значение попадает в default"
    },
    {
      "id": "556c",
      "title": "Специальный тип VOID",
      "desc": "Используется для функций, которые ничего не возвращают(undefined)."
    },
    {
      "id": "fdaa",
      "title": "Generic<T>",
      "desc": "создание универсального типа для какого либо поля. Т используется как аргумент в функциях, передается при объявлении generic. Когда мы заранее не знаем, какого типа могут быть данные, допустим data с сервера, вместо использования any, лучше создать generic"
    }
  ],
  "dataBook": [
    {
      "id": "e462",
      "title": "Компилятор",
      "desc": "Преобразует  человеку понятный код(программы) в абстрактное синтаксическое дерево(АСД). Далее АСД компилируется в низкоуровневую форму \"байт-код\", который можно запустить в среде выполнения и получить результат.",
      "category_id": "c6"
    },
    {
      "id": "d722",
      "title": "<b>АСД</b> - абстрактное синтаксическое дерево.",
      "desc": "Представляет собой структуру данных, игнорирующую пустые области, комментарии.",
      "category_id": "c6"
    },
    {
      "id": "6d01",
      "title": "Общие шаги выполнения программы",
      "desc": "Программа преобразуется в АСД -> АСД преобразуется в байт-код -> Байт-код исполняется средой выполнения и выводит результат.",
      "category_id": "c6"
    },
    {
      "id": "cd2f",
      "title": "Компилятор TS",
      "desc": "Код написанный на TypeScript преобразуется в АСД TS, после чему АДС TS проводит проверку типов и уже только потом TS преобразуется в JS. Проверка типов происходит на этапе компиляции, что позволяет отловить ошибки ещё на этапе разработки.",
      "category_id": "c7"
    },
    {
      "id": "718f",
      "title": "Система типов",
      "desc": "В TS используется две системы типов с явной и выводимой типизацией, первая рекомендуемая к использованию...",
      "category_id": "c1"
    },
    {
      "id": "f2c1",
      "title": "Тип :any",
      "desc": ":any не рекомендуется использовать в разработке, т.к. лишает элемента типизации...",
      "category_id": "c1"
    },
    {
      "id": "4cd3",
      "title": "Тип :unknow",
      "desc": ":unknow используется в случаях, когда заведомо неизвестен тип приходящих данных...",
      "category_id": "c1"
    },
    {
      "id": "9183",
      "title": "Тип :boolean",
      "desc": ":boolean логический тип, который можно отнести к литеральному типу...",
      "category_id": "c2"
    },
    {
      "id": "b50b",
      "title": "Тип :number",
      "desc": ":number используется для работы с числами...",
      "category_id": "c2"
    },
    {
      "id": "59db",
      "title": "Тип :bigint",
      "desc": ":bigint аналогичен по применению с :number, но имеет гораздо более широкий диапазон чисел",
      "category_id": "c2"
    },
    {
      "id": "a473",
      "title": "Тип :string",
      "desc": ":string набор используемый для работы со строками...",
      "category_id": "c2"
    },
    {
      "id": "f4ab",
      "title": "Структурная типизация",
      "desc": "В JS как и в TS объекты проверяются по структуре...",
      "category_id": "c1"
    },
    {
      "id": "a962",
      "title": "Тип :object",
      "desc": ":object предпочтительный способ описания типа объекта...",
      "category_id": "c8"
    },
    {
      "id": "dbf2",
      "title": "Типобезопасность",
      "desc": "Это когда среда/язык следит за правильным использованием данных...",
      "category_id": "c1"
    },
    {
      "id": "2cb8",
      "title": "Псевдоним Type",
      "desc": "type используется для описания повторно используемого типа...",
      "category_id": "c4"
    },
    {
      "id": "22ed",
      "title": "Объединение -  \" | \"",
      "desc": "Позволяет объединить два типа в один...",
      "category_id": "c5"
    },
    {
      "id": "eced",
      "title": "Пересечение - \" & \"",
      "desc": "Пересечение — это слияние двух типов...",
      "category_id": "c5"
    },
    {
      "id": "8831",
      "title": "Тип :array",
      "desc": ":array — тип однородных (предпочтительно) данных...",
      "category_id": "c3"
    },
    {
      "id": "fdee",
      "title": "Тип :tuple",
      "desc": ":tuple (Кортежи) — это подтип :array...",
      "category_id": "c3"
    },
    {
      "id": "453d",
      "title": "Тип :readonly [] || [type, type]",
      "desc": ":readonly ограничивает работу с массивами и кортежами...",
      "category_id": "c3"
    },
    {
      "id": "4e97",
      "title": "Типы :null, :undefined",
      "desc": "Оба типа взаимозаменяемые, однако есть различие в трактовке данных...",
      "category_id": "c2"
    },
    {
      "id": "cd68",
      "title": "Типы :void, :never для функций",
      "desc": "В контексте возвращаемого значения функции имеет следующие значения...",
      "category_id": "c9"
    },
    {
      "id": "bcf9",
      "title": "Enum",
      "desc": "Подходит для группировки имен по общему смыслу...",
      "category_id": "c4"
    },
    {
      "id": "9749",
      "title": "Axios",
      "desc": "Библиотека для работы с асинхронными запросами",
      "category_id": "c10"
    }
  ],
  "dataCategories": [
    {
      "id": "c1",
      "name": "Типизация"
    },
    {
      "id": "c2",
      "name": "Примитивные типы"
    },
    {
      "id": "c3",
      "name": "Типы коллекций"
    },
    {
      "id": "c4",
      "name": "Типы и псевдонимы"
    },
    {
      "id": "c5",
      "name": "Операции с типами"
    },
    {
      "id": "c6",
      "name": "Процесс компиляции"
    },
    {
      "id": "c7",
      "name": "TypeScript"
    },
    {
      "id": "c8",
      "name": "Типы объектов"
    },
    {
      "id": "c9",
      "name": "Типы функций"
    },
    {
      "id": "c10",
      "name": "Библиотеки"
    }
  ]
}